<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->

<c74object name="el.granule~">
    
	<digest>
		A granular synthesis tool.
	</digest>
	<description>
		<o>el.granule~</o> implements stereo granular synthesis using a wavetable and envelope, each stored in a buffer. Hundreds of grains per second can be synthesized on most modern computers.
    </description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Eric Lyon
		</metadata>
		<metadata name="tag">
			MSP
		</metadata>
		<metadata name="tag">
			LyonPotpourri
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="waveform buffer" type="symbol" optional="0">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The MSP buffer containing the waveform to be synthesized for each grain. This buffer must be mono.
			</description>
		</objarg>
		<objarg name="envelope buffer" type="symbol" optional="0">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The MSP buffer containing the envelope to be applied to each grain. This buffer must be mono.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="constrain_scale">
			<arglist>
                <arg name="toggle" type="int" optional="0" id="1" />
                
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				When set, forces scale to conform to specified minimum and maximum frequencies. See message "grist". This option is off by default.
            </description>
		</method>
        
		<method name="events">
			<arglist>
                <arg name="event counts" type="int" optional="0" id="1" />
                
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The number of events to generate on each call to "spray" or "pitchspray".
            </description>
		</method>
        
		<method name="grain">
			<arglist>
                <arg name="event specification" type="list" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Generate a single grain according to specifications. This can be useful for creating your own granular synthesis algorithma using Max or JavaScript. Parameters are: grain duration, frequency, amplitude, pan (0-1).
				Grain messages will only be received when the DACs are turned on. This is to avoid overflowing the internal queue.
            </description>
		</method>
        
		<method name="grist">
			<arglist>
                <arg name="internal algorithm parameters" type="list" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Specifies global control parameters. The parameters are: number of events per trigger, event horizon, minimum frequency, maximum frequency, left pan boundary, right pan boundary, minimum amplitude, maximum amplitude, minimum grain size, maximum grain size.
                <p>
                    The event horizon is the time window following a trigger. To get continuous sound, a trigger should be sent regularly at the periodicity of the event horizon. In most cases, a trigger would be a metro, connected to a "spray" or "pitchspray" message. Pan boundaries are between 0 - 1. The frequency boundaries will be ignored if a custom scale is used with pitchspray, unless the constrain_scale toggle has been set to 1.
                </p>
            </description>
		</method>
        
		<method name="highblock">
			<arglist>
                <arg name="maximum frequency" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Set hard cutoff for high frequencies, irrespective of global settings or pitch scale.
            </description>
		</method>
        
		<method name="info">
			<arglist>
                <!--arg name="maximum frequency" type="float" optional="0" id="1" /-->
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Print current state to Max window.
            </description>
		</method>
        
		<method name="lowblock">
			<arglist>
                <arg name="minimum frequency" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Set hard cutoff for low frequencies, irrespective of global settings or pitch scale.
            </description>
		</method>
        
		<method name="pitchdev">
			<arglist>
                <arg name="deviation" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description> Sets random deviation for scale members according to the formula
                <p/>
                <i>new_freq = freq * random(1.0/(1.0 + deviation), 1.0 + deviation)</i>
                <p/>
                Only positive values are accepted. In most cases the deviation should range between 0 - 1.
            </description>
		</method>
        
		<method name="pitchspray">
			<arglist>
                <!--arg name="deviation" type="float" optional="0" id="1" /-->
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                Triggers a cloud of events according to global parameters, and quantized to the current pitch scale.
            </description>
		</method>
        
		<method name="setbuf">
			<arglist>
                <arg name="buffers" type="list" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                Sets the waveform and envelope buffers. All currently synthesizing grains will be instantly aborted.
            </description>
		</method>
        
		<method name="setscale">
			<arglist>
                <arg name="frequencies" type="list" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                Defines the pitch scale as a series of ascending frequencies.
            </description>
		</method>
        
		<method name="spray">
			<arglist>
                <!--arg name="deviation" type="float" optional="0" id="1" /-->
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                Triggers a cloud of events according to global parameters, with random frequencies.
            </description>
		</method>
        
		<method name="steady">
			<arglist>
                <arg name="toggle" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                When set, events occur at regular time intervals defined as
                <p/>
                <i> event_horizon / event_count</i>
                <p/>
                
                This option is off by default.
            </description>
		</method>
        
		<method name="transpose">
			<arglist>
                <arg name="factor" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
                A global transposition factor applied to the grains, irrespective of state. By default the factor is 1.0
            </description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
	</attributelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="gizmo~"/>
        <seealso name="fftz.pvoc~"/>
	</seealsolist>
    
</c74object>
